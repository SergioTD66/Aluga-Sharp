// <auto-generated />
using System;
using AgendaSalas.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaSalas.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20221009200018_Inicial07")]
    partial class Inicial07
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgendaSalas.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("AgendaSalas.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoId"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("EnderecoId");

                    b.HasIndex("SalaId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("AgendaSalas.Models.Equipamento", b =>
                {
                    b.Property<int>("EquipamentosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipamentosId"), 1L, 1);

                    b.Property<float>("CustoHora")
                        .HasColumnType("real");

                    b.Property<float>("CustoSeguro")
                        .HasColumnType("real");

                    b.Property<float>("CustoTotal")
                        .HasColumnType("real");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Voltagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipamentosId");

                    b.ToTable("Equipamento");
                });

            modelBuilder.Entity("AgendaSalas.Models.Horario", b =>
                {
                    b.Property<int>("HorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioId"), 1L, 1);

                    b.Property<int?>("PeriodoId")
                        .HasColumnType("int");

                    b.HasKey("HorarioId");

                    b.HasIndex("PeriodoId");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("AgendaSalas.Models.Objetos", b =>
                {
                    b.Property<int>("ObjetosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjetosId"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.HasKey("ObjetosId");

                    b.ToTable("Objetos");
                });

            modelBuilder.Entity("AgendaSalas.Models.Periodo", b =>
                {
                    b.Property<int>("PeriodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodoId"), 1L, 1);

                    b.Property<int>("Dia")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<bool?>("estaAtiva")
                        .HasColumnType("bit");

                    b.HasKey("PeriodoId");

                    b.ToTable("Periodo");
                });

            modelBuilder.Entity("AgendaSalas.Models.Sala", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaId"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacao")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<string>("Janelas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voltagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medidaLado1EmMetros")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("medidaLado2EmMetros")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("numeroMaximoDePessoas")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("SalaId");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("AgendaSalas.Models.Servicos", b =>
                {
                    b.Property<int>("ServicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicoID"), 1L, 1);

                    b.Property<string>("Custo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServicoID");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("AgendaSalas.Models.Endereco", b =>
                {
                    b.HasOne("AgendaSalas.Models.Sala", null)
                        .WithMany("Localizacao")
                        .HasForeignKey("SalaId");
                });

            modelBuilder.Entity("AgendaSalas.Models.Horario", b =>
                {
                    b.HasOne("AgendaSalas.Models.Periodo", null)
                        .WithMany("Horarios")
                        .HasForeignKey("PeriodoId");
                });

            modelBuilder.Entity("AgendaSalas.Models.Periodo", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("AgendaSalas.Models.Sala", b =>
                {
                    b.Navigation("Localizacao");
                });
#pragma warning restore 612, 618
        }
    }
}
